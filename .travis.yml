dist: focal

language: go

go:
  - "1.13.x"

notifications:
  slack:
    if: branch = master AND type != pull_request
    on_success: change
    on_failure: always
    rooms:
      secure: B8NkX4SKLbr3fm5luTjnfzni12foriINUbwCyXWkcJ6g+U9cpg8cxPswvozIYEdGJDNPHf5kyBPYRVPjJfGzlHD4cgiytK7pcW8zkrjb2tyTzJNdkuYwAWylO73OHFHNoF4jAtcYDs9939oqdK124K+NZKS423QjB7LSFgrCXO6kattOdMGj6UnL0xeuooQ5dfCXLKpsnwbT2WQoUk4yeDo170tGwDi2jgN61a76ImU3tbrr2GQJwAwj3hwVtwfsmIVq1xdZefz618GYaByvW46vQ7XwxUZZiWJehDHqCQR//tqjPSV6PmtOPUUkfgBEbeR47k8qGBoIlaOc2ZkdvkpAj2ugyRIp0ReqJN5DRd6ErGk4MTWiDB9c6kmB+kjy61taDWKly/hZtK+rl6pYZcG14KEBJAdm+LM0f2L3IhB4myUB9gjc2Tc/tqBYitmK9cmwwr6OtgrCpibicRsYH8Ap7ojdDaoOBab+8aEYHlvrlIj0Zf9dpsK8aHOoqW3KXtJwEDG1apEtI+tPtfQiC6DqFA9V1MvcFXl/MUatsC3VkkZAq5VdSZHDKPkIdfeDuP8Wv//kHdt8o0sDC+6DyZrqkl3VBSGAXrSw6zJbXMCNvymtfCMFh/6I9GJBSAEzSxGD4weiMe65gwo6wHKnS/JaxNe2KCKx2Qo9YLMWG7w=

services:
  - redis-server
  - docker

addons:
  apt:
    packages:
      - net-tools
      - libpcre3-dev
      - libpasswdqc-dev
      - valgrind
      - build-essential
      - ca-certificates
      - libprotobuf-dev
  hosts:
    - grpcs_1.test
    - grpcs_2.test
    - grpcbin

env:
  global:
    - INSTALL_CACHE=$HOME/install-cache
    - DOWNLOAD_ROOT=$HOME/download-root
    - KONG_TEST_PG_DATABASE=travis
    - KONG_TEST_PG_USER=travis
    - KONG_TEST_PG_RO_USER=travis_ro
    - KONG_TEST_PG_HOST=localhost
    - JOBS=2
    - DOCKER_MACHINE_ARM64_NAME=travis-ci-kong-${TRAVIS_JOB_ID}
    # Related to packaging and master build
    - KONG_DISTRIBUTIONS_VERSION=master
    - CACHE_DIR=$HOME/distributions-cache
    - ENABLE_OPENTRACING=0
    # EE Plugins
    - KONG_REVISION=${TRAVIS_COMMIT}
    - KONG_VERSION=nightly-ee
    - DOCKER_IMAGE_NAME=kong-ee-test
  matrix:
    # enterprise matrix begin
    # XXX add extra jobs for different cassandra versions
    - KONG_TEST_DATABASE=postgres POSTGRES=9.6 TEST_SUITE=plugins-spec-ee

install:
  # Add an IPv6 config - see the corresponding Travis issue
  # https://github.com/travis-ci/travis-ci/issues/8361
  - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      sudo sh -c 'echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6';
    fi
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - source .ci/setup_env.sh
  - make dev try-install-plugins-ee

cache:
  apt: true
  directories:
    - $INSTALL_CACHE
    - $HOME/.ccm/repository
    - $HOME/distributions-cache
    - $HOME/docker-cache

before_install:
  - docker load -i $HOME/docker-cache/kong-ee-test.tar || true
  - docker load -i $HOME/docker-cache/ad-server.tar || true

before_cache:
  # files in distributions cache have been created within docker, so it's
  # completely possible that travis user would not have full permissions
  - sudo chown -R travis:travis $HOME/distributions-cache
  - sudo chown -R travis:travis $HOME/docker-cache

stages:
  - lint and unit
  - test
  - Kong Enterprise Plugins (Building Docker Image)
  - Kong Enterprise Plugins (Tests)

jobs:
  include:
    - stage: lint unit
      if: type = cron
      script:
      # setup_env.sh is not used for unit tests but there are some failures to investigate if don't start a PG instance.
      - docker run -d -t --name=postgres --rm -p 5432:5432 -e POSTGRES_USER=travis -e POSTGRES_PASSWORD=travis -e POSTGRES_HOST_AUTH_METHOD=trust -e POSTGRES_DB=travis postgres:9.6
      - make lint
      - bin/busted -v -o htest spec/01-unit --exclude-tags=flaky
      - bin/busted -v -o htest spec-ee/01-unit --exclude-tags=flaky
      - scripts/autodoc
      env:
        - KONG_DATABASE=none
    - stage: Kong Enterprise Plugins (Building Docker Image)
      script:
      - ./dist/dist.sh build alpine
      - ./dist/dist.sh build-image alpine
      - make test-build-pongo-deps
      - docker images
      - docker save -o $HOME/docker-cache/kong-ee-test.tar kong-ee-test
      - docker save -o $HOME/docker-cache/ad-server.tar ad-server
    - stage: Kong Enterprise Plugins (Tests)
      name: forward-proxy
      script:
      - make test-forward-proxy
    - name: canary
      script:
      - make test-canary
    - name: application-registration
      script:
      - make test-application-registration
    - name: collector
      script:
      - make test-collector
    - name: degraphql
      script:
      - make test-degraphql
    - name: exit-transformer
      script:
      - make test-exit-transformer
    - name: graphql-proxy-cache-advanced
      script:
      - make test-graphql-proxy-cache-advanced
    - name: graphql-rate-limiting-advanced
      script:
      - make test-graphql-rate-limiting-advanced
    - name: jq
      script:
      - make test-jq
    - name: jwt-signer
      script:
      - make test-jwt-signer
    - name: kafka-log
      script:
      - make test-kafka-log
    - name: kafka-upstream
      script:
      - make test-kafka-upstream
    - name: key-auth-enc
      script:
      - make test-key-auth-enc
    - name: ldap-auth-advanced
      script:
      - make test-ldap-auth-advanced
    - name: mocking
      script:
      - make test-mocking
    - name: mtls-auth
      script:
      - make test-mtls-auth
    - name: oauth2-introspection
      script:
      - make test-oauth2-introspection
    - name: opa
      script:
      - make test-opa
    - name: openid-connect
      script:
      - make test-openid-connect
    - name: proxy-cache-advanced
      script:
      - make test-proxy-cache-advanced
    - name: request-transformer-advanced
      script:
      - make test-request-transformer-advanced
    - name: request-validator
      script:
      - make test-request-validator
    - name: response-transformer-advanced
      script:
      - make test-response-transformer-advanced
    - name: route-by-header
      script:
      - make test-route-by-header
    - name: route-transformer-advanced
      script:
      - make test-route-transformer-advanced
    - name: statsd-advanced
      script:
      - make test-statsd-advanced
    - name: upstream-timeout
      script:
      - make test-upstream-timeout

script:
  - .ci/run_tests.sh
