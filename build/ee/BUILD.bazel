load("//build:build_system.bzl", "kong_rules_group", "kong_template_genrule")

kong_template_genrule(
    name = "luarocks_install_ee_plugins",
    srcs = [
        "@kong//:plugins_ee_rockspec_srcs",
        "@kong_gql//:all_srcs",  # will not build anything, just make sure it has been downloaded
        "@luarocks//:luarocks_exec",
        "@luarocks//:luarocks_make",  # don't let them run concurrently
        "@resty_openapi3_deserializer//:all_srcs",  # will not build anything, just make sure it has been downloaded
    ],
    output = "luarocks_install_ee_plugins.log",
    progress_message = "Luarocks: Install EE plugins",
    template = "@//build/ee:templates/luarocks-install-ee-plugins.sh",
    visibility = ["//visibility:public"],
)

filegroup(
    name = "distributions_constants",
    srcs = ["distributions_constants.lua"],
    visibility = ["//visibility:public"],
)

# TODO: should this be skipped if developing locally?
kong_template_genrule(
    name = "copy_distributions_constants",
    srcs = [
        ":distributions_constants",
        "@luarocks//:luarocks_make",  # overwrite after it's been written by luarocks
    ],
    output = "copy_distributions_constants.log",
    template = "@//build/ee:templates/copy-distribution-constants.sh",
    visibility = ["//visibility:public"],
)

# TODO: should this be skipped if developing locally?
kong_ljbc_directories = [
    "gql",
    "enterprise_edition",
    "keyring",
    "openid-connect",
    "plugins",
]

[kong_template_genrule(
    name = "bytecode_compile_%s" % d,
    srcs = [
        "@luarocks//:luarocks_make",  # overwrite after it's been written by luarocks
        # run after the following two
        ":luarocks_install_ee_plugins",
        ":copy_distributions_constants",
    ] + select({
        "@kong//:any-cross": [],
        "//conditions:default": ["@openresty//:luajit"],
    }),
    output = "bytecode_compile_%s.log" % d,
    progress_message = "Bytecode compiling: " + d,
    substitutions = {
        "{{source_dir}}": d,
    },
    template = "@//build/ee:templates/bytecode-compile.sh",
    tools = select({
        "@kong//:any-cross": ["@openresty//:luajit"],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
) for d in kong_ljbc_directories]

kong_rules_group(
    name = "bytecode_compile",
    propagates = [
        ":bytecode_compile_%s" % d
        for d in kong_ljbc_directories
    ],
    visibility = ["//visibility:public"],
)

# TODO: should this be skipped if developing locally?
kong_template_genrule(
    name = "luarocks_license",
    srcs = [
        ":luarocks_install_ee_plugins",
        "@luarocks//:luarocks_exec",
        "@luarocks//:luarocks_make",
    ] + select({
        "@kong//:any-cross": [],
        "//conditions:default": ["@jq//:libjq"],
    }),
    output = "manifest.json",
    progress_message = "Luarocks: Generate license manifest",
    template = "@//build/ee:templates/luarocks-license.sh",
    tools = select({
        "@kong//:any-cross": ["@jq//:libjq"],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
)
