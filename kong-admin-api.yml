components:
  schemas:
    workspaces:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        comment:
          type: string
        config:
          type: array
        created_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        meta:
          type: array
    services:
      required:
      - protocol
      - host
      - port
      type: object
      properties:
        read_timeout:
          type: integer
          default: 60000
        client_certificate:
          $ref: '#/components/schemas/certificates'
        host:
          type: string
        tls_verify:
          type: boolean
        tls_verify_depth:
          default: ~
          type: integer
          nullable: true
        created_at:
          type: integer
          format: int32
        updated_at:
          type: integer
          format: int32
        name:
          type: string
        ca_certificates:
          type: array
        tags:
          type: array
        protocol:
          type: string
          default: http
        retries:
          type: integer
          default: 5
        id:
          type: string
          format: uuid
        connect_timeout:
          type: integer
          default: 60000
        path:
          type: string
        write_timeout:
          type: integer
          default: 60000
        port:
          type: integer
          default: 80
    parameters:
      required:
      - key
      - value
      type: object
      properties:
        created_at:
          type: integer
          format: int32
        value:
          type: string
        key:
          type: string
    routes:
      required:
      - protocols
      - https_redirect_status_code
      - strip_path
      - preserve_host
      - request_buffering
      - response_buffering
      type: object
      properties:
        headers:
          type: array
        service:
          $ref: '#/components/schemas/services'
        created_at:
          type: integer
          format: int32
        strip_path:
          type: boolean
          default: true
        sources:
          type: array
        name:
          type: string
        hosts:
          type: array
        methods:
          type: array
        paths:
          type: array
        protocols:
          type: array
          default:
          - http
          - https
        destinations:
          type: array
        response_buffering:
          type: boolean
          default: true
        regex_priority:
          type: integer
          default: 0
        tags:
          type: array
        updated_at:
          type: integer
          format: int32
        https_redirect_status_code:
          type: integer
          default: 426
        snis:
          type: array
        id:
          type: string
          format: uuid
        path_handling:
          type: string
          default: v0
        preserve_host:
          type: boolean
          default: false
        request_buffering:
          type: boolean
          default: true
    consumers:
      required: []
      type: object
      properties:
        tags:
          type: array
        custom_id:
          type: string
        created_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        username:
          type: string
    plugins:
      required:
      - name
      - protocols
      - enabled
      type: object
      properties:
        name:
          type: string
        consumer:
          $ref: '#/components/schemas/consumers'
          default: ~
          nullable: true
        protocols:
          enum:
          - http
          - https
          - tcp
          - tls
          - udp
          - grpc
          - grpcs
          type: array
          default:
          - grpc
          - grpcs
          - http
          - https
        service:
          $ref: '#/components/schemas/services'
          default: ~
          nullable: true
        tags:
          type: array
        enabled:
          type: boolean
          default: true
        config:
          type: array
        created_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        route:
          $ref: '#/components/schemas/routes'
          default: ~
          nullable: true
    certificates:
      required:
      - cert
      - key
      type: object
      properties:
        tags:
          type: array
        key_alt:
          type: string
        cert:
          type: string
        cert_alt:
          type: string
        created_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        key:
          type: string
    ca_certificates:
      required:
      - cert
      type: object
      properties:
        tags:
          type: array
        cert_digest:
          type: string
        created_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        cert:
          type: string
    snis:
      required:
      - name
      - certificate
      type: object
      properties:
        name:
          type: string
        certificate:
          $ref: '#/components/schemas/certificates'
        created_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        tags:
          type: array
    upstreams:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        hash_on:
          type: string
          default: none
        client_certificate:
          $ref: '#/components/schemas/certificates'
        hash_fallback:
          type: string
          default: none
        hash_on_header:
          type: string
        host_header:
          type: string
        hash_fallback_header:
          type: string
        tags:
          type: array
        hash_on_cookie:
          type: string
        healthchecks:
          type: array
          default:
            passive:
              healthy:
                successes: 0
                http_statuses:
                - 200
                - 201
                - 202
                - 203
                - 204
                - 205
                - 206
                - 207
                - 208
                - 226
                - 300
                - 301
                - 302
                - 303
                - 304
                - 305
                - 306
                - 307
                - 308
              type: http
              unhealthy:
                tcp_failures: 0
                http_statuses:
                - 429
                - 500
                - 503
                http_failures: 0
                timeouts: 0
            active:
              https_verify_certificate: true
              healthy:
                interval: 0
                http_statuses:
                - 200
                - 302
                successes: 0
              timeout: 1
              unhealthy:
                tcp_failures: 0
                interval: 0
                http_statuses:
                - 429
                - 404
                - 500
                - 501
                - 502
                - 503
                - 504
                - 505
                http_failures: 0
                timeouts: 0
              concurrency: 10
              type: http
              http_path: /
        hash_on_cookie_path:
          type: string
          default: /
        slots:
          type: integer
          default: 10000
        created_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        algorithm:
          type: string
          default: round-robin
    clustering_data_planes:
      required:
      - id
      - ip
      - hostname
      - sync_status
      type: object
      properties:
        sync_status:
          type: string
          default: unknown
        version:
          type: string
        id:
          type: string
        hostname:
          type: string
        ip:
          type: string
        last_seen:
          type: integer
          format: int32
        config_hash:
          type: string
    targets:
      required:
      - upstream
      - target
      type: object
      properties:
        weight:
          type: integer
          default: 100
        tags:
          type: array
        upstream:
          $ref: '#/components/schemas/upstreams'
        created_at:
          type: number
          format: float
        id:
          type: string
          format: uuid
        target:
          type: string
    tags:
      required:
      - tag
      - entity_name
      - entity_id
      type: object
      properties:
        entity_name:
          type: string
        entity_id:
          type: string
        tag:
          type: string
info:
  contact:
    name: Kong
    url: https://github.com/Kong/kong
  version: 2.6.0
  title: Kong Admin API
  summary: Kong RESTful Admin API for administration purposes.
  description: "       {{site.base_gateway}} comes with an **internal** RESTful Admin
    API for administration purposes.\n        Requests to the Admin API can be sent
    to any node in the cluster, and Kong will\n        keep the configuration consistent
    across all nodes.\n\n        - `8001` is the default port on which the Admin API
    listens.\n        - `8444` is the default port for HTTPS traffic to the Admin
    API.\n\n        This API is designed for internal use and provides full control
    over Kong, so\n        care should be taken when setting up Kong environments
    to avoid undue public\n        exposure of this API. See [this document][secure-admin-api]
    for a discussion\n        of methods to secure the Admin API.\n      "
  license:
    name: Apache 2.0
    url: https://github.com/Kong/kong/blob/master/LICENSE
paths:
  /routes/{routes}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /consumers/{consumers}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /routes/{routes}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /services/{services}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /consumers/{consumers}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /plugins/schema/{name}:
    get: []
  /consumers:
    get: []
  /schemas/plugins/validate:
    post:
      description: This method is not available when using DB-less mode.
      summary: Validate a plugin configuration against the schema
  /certificates/{certificates}:
    get: []
    put:
      description: This method is not available when using DB-less mode.
    patch:
      description: This method is not available when using DB-less mode.
  /certificates/{certificates}/snis: []
  /clustering/data-planes: []
  /upstreams/{upstreams}/health:
    get:
      summary: Show Upstream health for node
  /status:
    get:
      summary: Retrieve node status
  /clustering/status: []
  /config:
    post:
      description: This method is only available when using DB-less mode.
    get:
      description: This method is only available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/{address}/healthy:
    post:
      description: This method is not available when using DB-less mode.
      summary: Set target address as healthy
  /upstreams/{upstreams}/targets/{targets}/{address}/unhealthy:
    post:
      description: This method is not available when using DB-less mode.
      summary: Set target address as unhealthy
  /cache/{key}:
    delete:
      description: This method is not available when using DB-less mode.
    get: []
  /schemas/{db_entity_name}/validate:
    post:
      description: This method is not available when using DB-less mode.
      summary: Validate a configuration against a schema
  /plugins:
    post:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/all:
    get:
      summary: List all Targets
  /certificates/{certificates}/snis/{snis}: []
  /:
    get: []
  /plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}:
    delete:
      description: This method is not available when using DB-less mode.
      summary: Delete Target
    get: []
    put:
      description: This method is not available when using DB-less mode.
    patch:
      description: This method is not available when using DB-less mode.
      summary: Update Target
  /targets/{targets}: []
  /plugins/enabled:
    get:
      summary: Retrieve Enabled Plugins
  /schemas/plugins/{name}:
    get:
      summary: Retrieve Plugin Schema
  /upstreams/{upstreams}/targets/{targets}/unhealthy:
    post:
      description: This method is not available when using DB-less mode.
      summary: Set target as unhealthy
  /upstreams/{upstreams}/targets:
    post:
      description: This method is not available when using DB-less mode.
    get: []
  /schemas/{name}:
    get:
      summary: Retrieve Entity Schema
  /tags/{tags}:
    get:
      summary: ' List entity IDs by tag '
  /targets/{targets}/upstream: []
  /endpoints:
    get:
      summary: List available endpoints
  /cache:
    delete:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/healthy:
    post:
      description: This method is not available when using DB-less mode.
      summary: Set target as healthy
  /snis/{snis}/certificate: []
  /targets: []
  /services/{services}/plugins:
    post:
      description: This method is not available when using DB-less mode.
servers:
- description: 8001 is the default port on which the Admin API listens.
  url: http://localhost:8001
- description: 8444 is the default port for HTTPS traffic to the Admin API.
  url: https://localhost:8444
openapi: 3.1.0
